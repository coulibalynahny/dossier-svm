shiny::runApp('GitHub/dossier-svm')
help(sqrt)
gfy=6+8
gfy
runApp('GitHub/dossier-svm')
runApp('GitHub/dossier-svm')
runApp('GitHub/dossier-svm')
runApp('GitHub/dossier-svm')
runApp('GitHub/dossier-svm')
shiny::runApp('GitHub/dossier-svm')
install.packages("rsconnect")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
TClass <- factor(c("non fraud", "non fraud", "fraud", "fraud"))
TClass
DT$Amount=as.vector(scale(DT$Amount))
DT$Time=as.vector(scale(DT$Time))
DT$Class=as.factor(DT$Class)
levels(DT$Class)[1] <- "nonFraud"
levels(DT$Class)[2] <- "Fraud"
table_prop<-rbind(table(DT$Class),prop.table(table(DT$Class)))
row.names(table_prop)<-c("Number","Proportion (in %)")
table_prop[2,]<-round(table_prop[2,],4)*100
tableex=DT[1:100,c(1,2,3,4,5,6,30,31)]
stat=summary(DT[,-31])
DT=read.csv("C:/Users/nahny/Documents/GitHub/dossier-svm/creditcard.csv", stringsAsFactors = FALSE )
DT$Amount=as.vector(scale(DT$Amount))
DT$Time=as.vector(scale(DT$Time))
DT$Class=as.factor(DT$Class)
levels(DT$Class)[1] <- "nonFraud"
levels(DT$Class)[2] <- "Fraud"
table_prop<-rbind(table(DT$Class),prop.table(table(DT$Class)))
row.names(table_prop)<-c("Number","Proportion (in %)")
table_prop[2,]<-round(table_prop[2,],4)*100
tableex=DT[1:100,c(1,2,3,4,5,6,30,31)]
stat=summary(DT[,-31])
set.seed(1234)
inTrain = createDataPartition(DT$Class, p = 0.7,list=FALSE)
data.train = as.data.frame(DT[inTrain,])
data.test = as.data.frame(DT[-inTrain,])
tab=table(data.train$Class)
DT$Amount=as.vector(scale(DT$Amount))
DT$Time=as.vector(scale(DT$Time))
DT$Class=as.factor(DT$Class)
levels(DT$Class)[1] <- "nonFraud"
levels(DT$Class)[2] <- "Fraud"
set.seed(1234)
inTrain = createDataPartition(DT$Class, p = 0.7,list=FALSE)
data.train = as.data.frame(DT[inTrain,])
data.test = as.data.frame(DT[-inTrain,])
tab=table(data.train$Class)
